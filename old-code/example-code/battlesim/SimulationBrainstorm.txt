public class Defend implements Simulation{
    Force force;
    List<StaticObject> sObj;

    public Defend(Force force, List<StaticObject> sObj){
        this.force = force;
        this.sObj = sObj;
    }

    public void Run(){
        Interrupts interrupts = new Interrupts();
        Step1 step1 = new Step1();
        Step2 step2 = new Step2();
        Step3 step3 = new Step3();

        while(!step1.isDone){
            while(!interrupts.isDone){
                interrupts.Run(force);
            }
            step.Run(force);
        }
        while(!step2.isDone){
            interrupts.isDone = true;
            while(!interrupts.isDone){
                interrupts.Run();
            }
            step2.Run(force);
        }
        while(!step3.isDone){
            interrupts.isDone = true;
            while(!interrupts.isDone){
                interrupts.Run();
            }
            step3.Run(force);
        }
    }
}

public class Interrupts implements Step{
    public boolean isDone = false;

    public void Run(Force force){
        if(!(force.IsInCombat() && force.IsGettingShot)){
            force.StopMovement();
            force.DetectEnemies(120);
        }
        IsDone = true;
    }
}

public class Step1 implements Step{
    public boolean isDone = false;

    public void Run(Force force){
        force.Take();
        Coord coord1 = new Coord(300,500);
        force.Move(coord1);
        if(force.pos == coord1){
            force.Release();
            isDone = true;
        }
    }
}

public class Step2 implements Step{
    public boolean isDone = false;

    public void Run(Force force){
        force.Take();
        Coord coord1 = new Coord(600,500);
        force.Move(coord1);
        if(force.pos == coord1){
            force.Release();
            isDone = true;
        }
    }
}

public class Step3 implements Step{
    public boolean isDone = false;

    public void Run(Force force){
        force.Take();
        if(force.pos == coord1){
            force.Release();
            isDone = true;
        }
    }
}


///////////////////////////////////// Andet forsøg
public class Simulation1{
  Force force;
  List<StaticObject> sObj;

  public Simulation1(Force force, List<StaticObject> sObj){
    this.force = force;
    this.sObj = sObj;
    //Step1
    force.Move(300,500);
    while
    //Step2
    force.Move();
  }

  public void Interrupts(){

  }
}


//////////////////////////////////////// Tredje forsøg


public class Map extends JPanel implements ActionListener {
    //...fra vores PoC

    // Denne bliver kaldt hvert frame
    public void actionPerformed(ActionEvent actionEvent) {
        if(isWinnerFound()){
            return;
        } else {
            updatePositions();
            performInstructions();
        }
    }

    private void updatePositions(){
        //....
    }

    private void performInstructions(){
        //Enemies
        if(!eStep1.isDone){
            eStep1.Run();
        }else if(!eStep2.isDone){
            eStep2.Run();
        }

        //Allies
        if(!aStep1.isDone){
            aStep1.Run();
        }else if(!aStep2.isDone){
            aStep2.Run();
        }
    }
    //...fra vores PoC
}

public class Step1 implements Step{
    public boolean isDone = false;

    public void Run(Force force){
        force.Take();
        Coord coord1 = new Coord(300,500);
        force.Move(coord1);
        if(force.pos == coord1){
            force.Release();
            isDone = true;
        }
    }
}

public class Step2 implements Step{
    public boolean isDone = false;
    public int time = 30 * 60;
    private int ticker = 0;

    public void Run(Force force){
        force.Take();
        if(ticker == time){
            force.Release();
        }
        i++;
    }
}

///////////////Noget andet
public class MoveStep implements Step{
    public boolean isDone = false;
    public Moveable object; //Soldier, Group, Platoon og Force nedarver fra Movable
    public Coord coord = new Coord();

    public MoveStep(Movable object, Coord coord){
        this.object = object;
        this.coord = coord;
    }

    public void Run(){
        object.Take();
        object.Move(coord);
        if(object.pos == coord){
            object.Release();
            isDone = true;
        }
    }
}
