Include("stdlib.bs")


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Her begynder Type erklæringer'''''''''''''''''''''''''''
Type Coord
	x as Number
	y as Number

	Function Number GetHeight(terrain as Terrain)
		Return terrain.map[x][y]
	End Function
End Type
/'
Declare pos as Coord
pos(x, y) = 20, 10
pos.x = 20
pos.y = 10
'/
Type Terrain
	resolution as Number 			/'Opløsningen af højde-værdierne (Jpg og png er 256 resolution)'/
	map[][] as Number
	pixelLength as Number 			'Den aktuelle længde per pixel i meter
	maxRealHeight as Number 		'Den maksimale højde i meter for en pixel  (Resolution)
	Function CreateTerrainFromImg(path as String)
		'Læser filen og initialiserer Map
	End Function
End Type

Type Unit
	id as Number
	name as String
	rank as Number
	position as Coord
	speed as Number
	Function MoveTo(newposition as Coord)
		' ... MoveTo funktionaltiet
	End Function
	Function Move(length as Number, degree as Number)
		If degree > 360 OR degree < 0 Then
			Return
		End If
			' ... Move funktionaltiet
	End Function
End Type

Type Platoon
	units as List<Unit>

	Function Number AverageHeight(terrain as Terrain)
		Declare res as Number = 0
		Foreach unit as Unit In units Do
			res += unit.position.GetHeight(terrain)
		End Foreach
		Return res / units.Count()
	End Function
End Type

Function Number Sum(num1 as Number, num2 as Number)
	Return num1 + num2
End Function

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Her begynder deklarationer''''''''''''''''''''''''''''''

Begin Program /' command line arguments? '/
	Declare terrain as Terrain 'Standard library der genererer 2D-array elevation-matrix
	terrain = terrain.CreateTerrainFromImg("Heightmap.png")

	Declare soldier1 as Unit		/'Her ville det nok give bedre mening med'/
	soldier1.id = 0					/'soldier1(id) = 0'/
	soldier1.name = "John"	/'måske??'/
	soldier1.rank = 2
	soldier1.position = (10, 20)

	Declare soldier2 as Unit
	soldier2.id = 1
	soldier2.name = "Gert"
	soldier2.rank = 3
	soldier2.position = (11, 20)

	Declare soldier3 as Unit(id, name, rank, position) = 2, "Charles", 3, (12, 22)

	Declare platoon as Platoon(units) = {soldier1, soldier2, soldier3} as List<unit>

	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	'Her begynder den imperative del'''''''''''''''''''''''''
	soldier2.MoveTo(11, 21) 'Flytter soldier2 til koordinatet (11, 21)
	soldier3.MoveTo(43, 45)
	soldier1.MoveTo(45, 76)

	If soldier1.position.GetHeight(terrain) > 100 Then
		platoon.Move(30, N) 'Flytter platoon 30 units nord
	End If

	Declare base as Coord = (50, 50)

	If platoon.AverageHeight > 100 Then
		platoon.Move(30, NW)
	ElseIf platoon > 90 Then
		platoon.MoveTo(base)
	End If

	While platoon.position.GetHeight(terrain) < 100 Do
		Foreach Unit unit in platoon Do
			unit.speed = unit.speed + 0.1
		End Foreach'wait tager input i millisekunder -- evt wait(100)?
		Wait(100)
	End While

	Switch soldier1.position
		Case (10, 11)
			Print("Position (10, 11)")
		Case (10, 12)
			Print("Position (10, 12)")
		Default
			Print("Other Position")
	End Switch

End Program


Function Number Multiplication(num1 as Number, num2 as Number)
	Return num1 * num2
End Function
