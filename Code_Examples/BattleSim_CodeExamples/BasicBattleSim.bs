Include("stdlib.bs")
/* List<T> - Add(obj as T), Remove(obj as T), Count()
 Terrain - CreateTerrainFromImg(path as String)


*/
Define NORTH 0
Define EAST 90
Define SOUTH 180
Define WEST 270
Define HELLO "Hej"


//Her begynder Type erklæringer
Type Coord
	x as Number
	y as Number

	Function Number GetHeight(terrain as Terrain)
		Return terrain.map[x][y]
	End Function
End Type
/*
Declare pos as Coord
pos(x, y) = 20, 10
pos.x = 20
pos.y = 10
*/
Type Terrain	//Skal være stdlib
	resolution as Number 			//Opløsningen af højde-værdierne (Jpg og png er 256 resolution)
	map as Number[1081][1081]
	pixelLength as Number 			//Den aktuelle længde per pixel i meter
	maxRealHeight as Number 		//Den maksimale højde i meter for en pixel  (Resolution)
	Function CreateTerrainFromImg(path as String)
		//Læser filen og initialiserer Map
	End Function
End Type

Type Unit
	id as Number
	name as String
	rank as Number
	position as Coord
	speed as Number
	Function MoveTo(newposition as Coord)
		// ... MoveTo funktionaltiet
	End Function
	Function Move(length as Number, degree as Number)
		If degree GREATERTHAN 360 OR degree LESSTHAN 0 Then
			Return
		End If
			// ... Move funktionaltiet
	End Function
End Type

Type Platoon
	units as List<Unit>

	Function Number AverageHeight(terrain as Terrain)
		Declare res as Number = 0
		Foreach unit as Unit In units Do
			res += unit.position.GetHeight(terrain)
		End Foreach
		Return res / units.Count()
	End Function
End Type

Function Number Sum(num1 as Number, num2 as Number)
	Return num1 + num2
End Function

//Her begynder deklarationer

Begin Program
	Declare terrain as Terrain //Standard library der genererer 2D-array elevation-matrix
	terrain = terrain.CreateTerrainFromImg("Heightmap.png")

	Declare soldier1 as Unit		//Her ville det nok give bedre mening med
	soldier1.id = 0					//soldier1(id) = 0
	soldier1.name = "John"	//måske??
	soldier1.rank = 2
	soldier1.position.x = 10
	soldier1.position.y = 20

	Declare soldier2 as Unit
	soldier2.id = 1
	soldier2.name = "Gert"
	soldier2.rank = 3
	soldier2.position.x = 11
	soldier2.position.y = 20

	Declare soldier3 as Unit
	soldier3.id = 2
	soldier3.name = "Charles"
	soldier3.rank = 3
	soldier3.position.x = 12
	soldier3.position.y = 22

	Declare platoon as Platoon	//List<T>.Add() er stdlib
	platoon.units.Add(soldier1)
	platoon.units.Add(soldier2)
	platoon.units.Add(soldier3)


//	Her begynder den imperative del
	soldier2.MoveTo(11, 21) //Flytter soldier2 til koordinatet (11, 21)
	soldier3.MoveTo(43, 45)
	soldier1.MoveTo(45, 76)

	If soldier1.position.GetHeight(terrain) GREATERTHAN 100 Then
		platoon.Move(30, N) //Flytter platoon 30 units nord
	End If

	Declare base as Coord = (50, 50)

	If platoon.AverageHeight GREATERTHAN 100 Then
		platoon.Move(30, NW)
	Else If platoon GREATERTHAN 90 Then
		platoon.MoveTo(base)
	End If

	While platoon.position.GetHeight(terrain) LESSTHAN 100 Do
		Foreach Unit unit In platoon Do
			unit.speed = unit.speed + 0.1
		End Foreach
		//wait tager input i millisekunder
		Wait(100)
	End While

	Switch soldier1.position
		Case (10, 11)
			Print("Position (10, 11)")
		Case (10, 12)
			Print("Position (10, 12)")
		Default
			Print("Other Position")
	End Switch
End Program


Function Number Multiplication(num1 as Number, num2 as Number)
	Return num1 * num2
End Function
