Begin Declarations  // Declaration of global variables
  Declare terrain as Terrain
  terrain.height = 500
  terrain.width = 1000

  ////////////////////////
  //Declaration of Allies/
  ////////////////////////
  Declare aGroup1 as Group
  aGroup1.coord = (20,30)
  aGroup1.soldiers = 6
  aGroup1.magazines = 24

  Declare aGroup2 as Group
  aGroup2.coord = (30,30)
  aGroup2.soldiers = 6
  aGroup2.magazines = 24

  Declare aGroup3 as Group
  aGroup3.coord = (40,30)
  aGroup3.soldiers = 6
  aGroup3.magazines = 24

  Declare aPlatoon1 as Platoon
  aPlatoon1.AddGroups(aGroup1, aGroup2, aGroup3)

  Declare allies as Force
  allies.AddPlatoons(aPlatoon1)

  /////////////////////////
  //Declaration of Enemies/
  /////////////////////////

  Declare eGroup1 as Group
  eGroup1.coord = (960,450)
  eGroup1.soldiers = 6
  eGroup1.magazines = 24

  Declare eGroup2 as Group
  eGroup2.coord = (950,450)
  eGroup2.soldiers = 6
  eGroup2.magazines = 24

  Declare eGroup3 as Group
  eGroup3.coord = (940,450)
  eGroup3.soldiers = 6
  eGroup3.magazines = 24

  Declare ePlatoon1 as Platoon
  ePlatoon1.AddGroups(eGroup1, eGroup2, eGroup3)

  Declare enemies as Force
  enemies.AddPlatoons(ePlatoon1)
End Declarations

Begin Program
  Co
End Program

Function Void MoveSoldier(soldier as Soldier, velocity as Number, coord as Coord)
  soldier.velocity = velocity
  soldier.vector = FindUnitVector(soldier.coord, coord)
End Function

//Moves a groups leader (first in list) to a given coordinate, and the rest of the groups moves relatively to the leader
Function Void MoveGroup(group as Group, velocity as Number, coord as Coord)
  group.velocity = velocity // km/h.  Changes the velocity of all Soldiers of the Group
  Vector vector = FindUnitVector(group.soldiers[0].coord)
  Foreach Soldier soldier in group
    relativeCoord as Coord
    relativeCoord.x = soldier.coord.x + vector.x
    relativeCoord.y = soldier.coord.y + vector.y
    MoveSoldier(soldier, velocity, relativeCoord)
  End Foreach
  /*
  Something happens here
  */

End Function

Function Void MovePlatoon(platoon as Platoon, velocity as Number, coord as Coord)
  platoon.velocity = velocity
  Foreach Group group In platoon
    MoveGroup(group, velocity, coord)
  End Foreach
  /*
  Something happens here
  */
End Function

Function Void Flanking()

End Function

Function Vector FindUnitVector(startCoord as Coord, targetCoord as Coord)
  res as Vector
  res.x = targetCoord.x - startCoord.x
  res.y = targetCoord.y - targetCoord.y
  length as Number = res.x * res.x + res.y * res.y
  length = sqrt(length)
  res.x *= length
  res.y *= length
  Return res
End Function
