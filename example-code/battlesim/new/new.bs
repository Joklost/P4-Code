Begin Declarations
// Declaration of global variables
  Declare terrain as Terrain
  terrain.height = 500
  terrain.width = 1000

  ////////////////////////
  //Declaration of Allies/
  ////////////////////////
  Declare aGroup1 as Group
  aGroup1.coord =   30
  aGroup1.soldiers = 6
  aGroup1.magazines = 24

  Declare aGroup2 as Group
  aGroup2.coord = (30,30)
  aGroup2.soldiers = 6
  aGroup2.magazines = 24

  Declare aGroup3 as Group
  aGroup3.coord = (40,30)
  aGroup3.soldiers = 6
  aGroup3.magazines = 24

  Declare aPlatoon1 as Platoon
  aPlatoon1.AddGroups(aGroup1, aGroup2, aGroup3)

  Declare allies as Force
  allies.AddPlatoons(aPlatoon1)

  /////////////////////////
  //Declaration of Enemies/
  /////////////////////////

  Declare eGroup1 as Group
  eGroup1.coord = (960,30)
  eGroup1.soldiers = 6
  eGroup1.magazines = 24

  Declare eGroup2 as Group
  eGroup2.coord = (950,30)
  eGroup2.soldiers = 6
  eGroup2.magazines = 24

  Declare eGroup3 as Group
  eGroup3.coord = (940,30)
  eGroup3.soldiers = 6
  eGroup3.magazines = 24

  Declare ePlatoon1 as Platoon
  ePlatoon1.AddGroups(eGroup1, eGroup2, eGroup3)

  Declare enemies as Force
  enemies.AddPlatoons(ePlatoon1)

  //////////////////////////
  //Declaration of Barriers/
  //////////////////////////

  //A barriers shape is defined by its edges
  Declare barrier as Barrier
  barrier.vertex1 = (97,656)
  barrier.vertex2 = (140,720)

  Declare Base as Coord
  Base = (30,250)

End Declarations


Declare Simulations

  Simulation simulation1
    Step 1
      enemies.Move(100,715)
      allies.Move(320,900)
    Step 2
      enemies.TryDetectEnemies(1800)
      //Try to detect enemies for 30 minuttes
      allies.Move(320,500)
    Step 3
      enemies.Move(100,960)
      allies.Done()
    Step 4
      allies.Done()

    Interrupts

      If NOT allies.IsInCombat() AND allies.IsGettingShot() Then
        allies.StopMovement()
        allies.TryDetectEnemies(120)
      End If

      If allies.IsEnemyDetected() Then
        allies.StopMovement()
        allies.Engage(allies.enemy)
      End If

  End simulation1



  Simulation protectTheGeneral
    Step 1
      allies.Move(30,250)
      enemies.Move(950,250)
    Step 2
      allies.Move(250,250)
      enemies.Move(600,250)
    Step 3
      //Group 1 and 3 starts moving to flanking positions
      general.Move(300,250)
      aGroup1.Move(550,400)
      aGroup3.Move(550,100)
      enemies.TryDetectEnemies(30 * 60)
    Step 4
      aGroup1.Move(600,400)
      aGroup3.Move(600,100)
    Step 5
      aGroup1.Move(600,300)
      aGroup3.Move(600,200)
    Step 6
      aGroup1.MoveAndDetect(600,250)
      //Move to location while detection range is increased (velocity should be decreased)
      aGroup3.MoveAndDetect(600,250)
      general.Wait(aGroup1.Step6 AND aGroup3.Step6)
    Step 7
      If NOT aGroup1.IsDead AND NOT aGroup3.IsDead Then
        general.Move(600,250)
      Else
        general.Move(Base)
      End If
    Step 8

    Interrupts
      If NOT allies.IsInCombat() AND allies.IsGettingShot() Then
        allies.StopMovement()
        allies.TryDetectEnemies(120)
      End If

      If allies.IsEnemyDetected() Then
        allies.StopMovement()
        allies.Engage(allies.enemy)
      End If

  End protectTheGeneral

  Simulation clearTheAreaByFlanking
    Step 1
      allies.Move(30,250)
    Step 2
      allies.Move(250,250)
    Step 3
      //Group 1 and 3 starts moving to flanking positions
      general.Move(300,250)
      aGroup1.Move(550,400)
      aGroup2.Move(550,100)
    Step 4
      aGroup1.Move(600,400)
      aGroup2.Move(600,100)
    Step 5
      aGroup1.Move(600,300)
      aGroup2.Move(600,200)
    Step 6
      aGroup1.MoveAndDetect(600,250)
      //Move to location while detection range is increased (velocity should be decreased)
      aGroup3.MoveAndDetect(600,250)
      general.Wait(aGroup1.Step6 AND aGroup3.Step6)
    Step 7
      aGroup1.TryDetectEnemies(10 * 60)
      aGroup2.TryDetectEnemies(10 * 60)
      general.Wait(aGroup1.Step7 AND aGroup2.Step7)
      //Steps are necesarry to do this
    Step 8
      If NOT aGroup1.IsDead AND NOT aGroup2.IsDead Then
        general.Move(600,250)
      Else
        general.Move(Base)
      End If

    Interrupts
  End clearTheAreaByFlanking

  Simulation flanking
    Step 1
      allies.Move(30,250)
      enemies.Move(950,250)
    Step 2
      allies.Move(250,250)
      enemies.Move(600,250)
    Step 3
    //Group 1 and 3 starts moving to flanking positions
      aGroup1.Move(550,400)
      aGroup2.Move(300,250)
      aGroup3.Move(550,100)
      enemies.TryDetectEnemies(30 * 60)
    Step 4
      aGroup1.Move(600,400)
      aGroup2.Wait(aGroup1.Step4 AND aGroup3.Step4)
      aGroup3.Move(600,100)
    Step 5
      aGroup1.Move(600,300)
      aGroup2.Move(500,250)
      aGroup3.Move(600,200)
    Step 6
      aGroup1.TryDetectEnemies(2 * 60)
      aGroup2.TryDetectEnemies(2 * 60)
      aGroup3.TryDetectEnemies(2 * 60)
    Step 7
      allies.Done()
      enemies.Done()
    Interrupts
  End flanking
End Declare Simulations


Begin Program

  Declare i as Integer
  i = 0
  For i To 10 Do
    simulation1.Run()
  End For

  simulation1.Render(1)
  // Render takes a time scale as input, and renders the simulation for the user to view

End Program

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Dette skal være indbyggede funktioner, og Move() funktioner skal nok være en del af klasserne der kan bevæge sig/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Function Void MoveSoldier(soldier as Soldier, velocity as Decimal, coord as Coord)
  soldier.velocity = velocity
  soldier.vector = FindUnitVector(soldier.coord, coord)
End Function

//Moves a groups leader (first in list) to a given coordinate, and the rest of the groups moves relatively to the leader
Function Void MoveGroup(group as Group, velocity as Decimal, coord as Coord)
  group.velocity = velocity
  // km/h.  Changes the velocity of all Soldiers of the Group
  Declare vector as Vector
  vector = FindUnitVector(group.soldiers[0].coord)
  Foreach Soldier soldier in group Do
    Declare relativeCoord as Coord
    relativeCoord.x = soldier.coord.x + vector.x
    relativeCoord.y = soldier.coord.y + vector.y
    MoveSoldier(soldier, velocity, relativeCoord)
  End Foreach
  /*
  Something happens here
  */

End Function

Function Void MovePlatoon(platoon as Platoon, velocity as Decimal, coord as Coord)
  platoon.velocity = velocity
  Foreach Group group in platoon Do
    MoveGroup(group, velocity, coord)
  End Foreach
  /*
  Something happens here
  */
End Function


Function Vector FindUnitVector(startCoord as Coord, targetCoord as Coord)
  Declare res as Vector
  res.x = targetCoord.x - startCoord.x
  res.y = targetCoord.y - targetCoord.y
  Declare length as Decimal
  length = res.x * res.x + res.y * res.y
  length = sqrt(length)
  res.x *= length
  res.y *= length
  Return res
End Function
